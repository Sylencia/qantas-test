{"version":3,"sources":["components/Hotel/Information/Information.module.scss","App.module.scss","components/Hotel/Price/Price.module.scss","images/qantas-logo.png","components/Summary/Summary.module.scss","components/Hotel/Hotel.module.scss","Utils/Rating.module.scss","components/Summary/Summary.jsx","components/Hotel/Information/Information.jsx","Utils/Rating.jsx","components/Hotel/Price/Price.jsx","components/Hotel/Hotel.jsx","App.js","Utils/HotelInfo.jsx","serviceWorker.js","index.js"],"names":["module","exports","information","heading","name","address","roomContainer","room","cancellationContainer","cancellation","app","logo","container","total","nights","price","currency","savings","__webpack_require__","p","bold","italics","description","image","promotion","star","full","half","circle","Summary","_ref","numHotels","sortMethod","setSortMethod","react_default","a","createElement","className","styles","value","onChange","e","target","disabled","defaultProps","Information","data","title","type","rating","symbol","numFullRating","Math","floor","emptyRatingIdx","ceil","ratingDisplay","i","_cx","push","key","shortid","generate","cx","Object","defineProperty","getRatingDisplay","ratingData","ratingType","ratingValue","offerRoom","href","cancellationType","Price","concat","Hotel","console","log","src","imageData","url","alt","caption","offerType","Information_Information","Price_Price","App","hotels","sortType","_useState","useState","_useState2","slicedToArray","results","sortedResults","sort","b","offer","displayPrice","amount","Summary_Summary","length","map","hotel","hotelData","id","property","_join","previewImage","_get","extractHotelInformation","Hotel_Hotel","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0beac705.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"information\":\"Information_information__45dSG\",\"heading\":\"Information_heading__1xAII\",\"name\":\"Information_name__1LmVk\",\"address\":\"Information_address__EWgip\",\"roomContainer\":\"Information_roomContainer__R9Dme\",\"room\":\"Information_room__1Ga4i\",\"cancellationContainer\":\"Information_cancellationContainer__1USE-\",\"cancellation\":\"Information_cancellation__JqaRU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1R1kU\",\"logo\":\"App_logo__3C4Fc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Price_container__2f7Wf\",\"total\":\"Price_total__1Blso\",\"nights\":\"Price_nights__2DvBp\",\"price\":\"Price_price__gwzEp\",\"currency\":\"Price_currency__2zGyH\",\"savings\":\"Price_savings__3wlbB\"};","module.exports = __webpack_public_path__ + \"static/media/qantas-logo.a94aa0fe.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Summary_container__2iLIL\",\"bold\":\"Summary_bold__2iwdO\",\"italics\":\"Summary_italics__3imjf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Hotel_container__4JUkA\",\"description\":\"Hotel_description__3hDTX\",\"image\":\"Hotel_image__2waFA\",\"promotion\":\"Hotel_promotion__2wd9j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"star\":\"Rating_star__23Z0f\",\"full\":\"Rating_full__3tOUW\",\"half\":\"Rating_half__3AQLp\",\"circle\":\"Rating_circle__gTXzD\"};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Summary.module.scss'\n\nexport const Summary = ({ numHotels, sortMethod, setSortMethod }) => {\n  return (\n    <div className={styles.container}>\n      <div>\n        <span className={styles.bold}>{numHotels}</span>\n        <span className={styles.italics}> hotels in </span>\n        <span className={styles.bold}>Sydney</span>\n      </div>\n      <div>\n        {'Sort by '}\n        <select value={sortMethod} onChange={e => setSortMethod(e.target.value)}>\n          <option disabled value=\"default\" />\n          <option value=\"ascending\">Price low-high</option>\n          <option value=\"descending\">Price high-low</option>\n        </select>\n      </div>\n    </div>\n  )\n}\n\nSummary.propTypes = {\n  numHotels: PropTypes.number,\n  sortMethod: PropTypes.string.isRequired,\n  setSortMethod: PropTypes.func.isRequired,\n}\n\nSummary.defaultProps = {\n  numHotels: 0,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Information.module.scss'\nimport { getRatingDisplay } from '../../../Utils/Rating'\n\nexport const Information = ({ data }) => (\n  <div className={styles.information}>\n    <div className={styles.heading}>\n      <span className={styles.name}>{data.title}</span>\n      {getRatingDisplay(data.ratingData.ratingType, data.ratingData.ratingValue)}\n    </div>\n    <span className={styles.address}>{data.address}</span>\n    <div className={styles.roomContainer}>\n      {data.offerRoom && (\n        <a href=\"/\" className={styles.room}>\n          {data.offerRoom}\n        </a>\n      )}\n    </div>\n    <div className={styles.cancellationContainer}>\n      {data.cancellationType === 'FREE_CANCELLATION' && (\n        <span className={styles.cancellation}>Free Cancellation</span>\n      )}\n    </div>\n  </div>\n)\n\nInformation.propTypes = {\n  data: PropTypes.shape().isRequired,\n}\n","import React from 'react'\nimport cx from 'classnames'\nimport shortid from 'shortid'\nimport styles from './Rating.module.scss'\n\n// ASSUMPTION: Rating will never be >5\nexport const getRatingDisplay = (type, rating) => {\n  const MAX_RATING = 5\n\n  const symbol = type === 'star' ? '★' : '●'\n  const numFullRating = Math.floor(rating)\n  // We add empty stars from the point after each full star and half star has\n  // been created\n  const emptyRatingIdx = Math.ceil(rating)\n  const ratingDisplay = []\n  for (let i = 0; i < MAX_RATING; ++i) {\n    ratingDisplay.push(\n      <span\n        key={shortid.generate()}\n        className={cx({\n          [styles.star]: type === 'star',\n          [styles.circle]: type === 'self',\n          [styles.full]: i < numFullRating,\n          // If there is a gap between full stars and empty stars, it must\n          // be filled with a half star\n          [styles.half]: i === numFullRating && i < emptyRatingIdx,\n        })}\n      >\n        {symbol}\n      </span>\n    )\n  }\n\n  return <div>{ratingDisplay}</div>\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Price.module.scss'\n\nexport const Price = ({ data }) => (\n  <div className={styles.container}>\n    <div className={styles.total}>\n      <span className={styles.nights}>1</span> night total ({data.currency})\n    </div>\n    <div className={styles.price}>\n      <span className={styles.currency}>$</span>\n      {data.price}\n    </div>\n    <div className={styles.savings}>{data.savings && `Save $${data.savings}~`}</div>\n  </div>\n)\n\nPrice.propTypes = {\n  data: PropTypes.shape().isRequired,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './Hotel.module.scss'\n\nimport { Information } from './Information'\nimport { Price } from './Price'\n\nexport const Hotel = ({ data }) => {\n  console.log(data)\n  return (\n    <div className={styles.container}>\n      <div className={styles.image}>\n        <img src={data.imageData.url} alt={data.imageData.caption} />\n        {data.offerType && <div className={styles.promotion}>{data.offerType}</div>}\n      </div>\n      <div className={styles.description}>\n        <Information data={data} />\n        <Price data={data} />\n      </div>\n    </div>\n  )\n}\n\nHotel.propTypes = {\n  data: PropTypes.shape().isRequired,\n}\n","import React, { useState } from 'react'\nimport logo from './images/qantas-logo.png'\nimport styles from './App.module.scss'\n\nimport { Summary } from './components/Summary'\nimport { Hotel } from './components/Hotel'\n\nimport { extractHotelInformation, sortHotels } from './Utils/HotelInfo'\n\nimport data from './data/data.json'\n\nconst App = () => {\n  const [sortMethod, setSortMethod] = useState('default')\n  const results = data.results\n  const sortedResults = sortHotels(results, sortMethod)\n\n  return (\n    <div className={styles.app}>\n      <img src={logo} className={styles.logo} alt=\"logo\" />\n      <Summary numHotels={results.length} sortMethod={sortMethod} setSortMethod={setSortMethod} />\n      {sortedResults.map(hotel => {\n        const hotelData = extractHotelInformation(hotel)\n        return <Hotel key={hotel.id} data={hotelData} />\n      })}\n    </div>\n  )\n}\n\nexport default App\n","import _join from 'lodash/join'\nimport _get from 'lodash/get'\n\nexport const extractHotelInformation = hotelData => {\n  return {\n    id: hotelData.id,\n    title: hotelData.property.title,\n    address: _join(hotelData.property.address, ', '),\n    imageData: hotelData.property.previewImage,\n    ratingData: hotelData.property.rating,\n    offerType: _get(hotelData, 'offer.promotion.title', ''),\n    offerRoom: _get(hotelData, 'offer.name', ''),\n    price: _get(hotelData, 'offer.displayPrice.amount', null),\n    savings: _get(hotelData, 'offer.savings.amount', null),\n    currency: _get(hotelData, 'offer.displayPrice.currency', ''),\n    cancellationType: _get(\n      hotelData,\n      'offer.cancellationOption.cancellationType',\n      'NOT_REFUNDABLE'\n    ),\n  }\n}\n\nexport const sortHotels = (hotels, sortType) => {\n  if (sortType === 'default') {\n    return hotels\n  } else if (sortType === 'ascending') {\n    return hotels.sort((a, b) => a.offer.displayPrice.amount - b.offer.displayPrice.amount)\n  } else if (sortType === 'descending') {\n    return hotels.sort((a, b) => b.offer.displayPrice.amount - a.offer.displayPrice.amount)\n  }\n\n  return hotels\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}